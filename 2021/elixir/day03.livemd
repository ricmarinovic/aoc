# Advent of Code - Day 03

```elixir
Mix.install([
  {:kino, "~> 0.7.0"}
])
```

## Input setup

```elixir
import Bitwise
input = Kino.Input.textarea("Input file:")
```

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
input =
  input
  |> Kino.Input.read()
  |> String.split("\n", trim: true)
```

## Part 1

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
numbers =
  input
  |> Enum.map(fn number ->
    number
    |> String.to_charlist()
    |> List.to_tuple()
  end)

[sample | _] = numbers
number_length = tuple_size(sample)
half = div(length(numbers), 2)

gamma_as_list =
  for pos <- 0..(number_length - 1) do
    zero_count = Enum.count_until(numbers, &(elem(&1, pos) == ?0), half + 1)
    if zero_count > half, do: ?0, else: ?1
  end

gamma = List.to_integer(gamma_as_list, 2)
mask = (1 <<< number_length) - 1
epsilon = bnot(gamma) &&& mask
gamma * epsilon
```

## Part 2

```elixir
defmodule Recursion do
  def recur
end
```
